{
  "hash": "3872b166b123b6ae0c4471cc63585250",
  "result": {
    "markdown": "---\ntitle: \"Replication: In search of homo economicus\"\nauthor: \"MSM\"\ndate: \"2022-10-02\"\ncategories: [Replication, Choice, Emotion, Failedreplication]\nsidebar:\n  contents: auto\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-1_52408b527eda0d042d780ab27d15e397'}\n\n:::\n\n\n## Abstract\n\nUnderstanding the role of emotion in forming preferences is critical in helping firms choose effective marketing strategies and consumers make appropriate consumption decisions. In five experiments, participants made a set of binary product choices under conditions designed to induce different degrees of emotional decision processing. The results consistently indicate that greater reliance on emotional reactions during decision making is associated with greater preference consistency and less cognitive noise. Additionally, the results of a meta-analytical study based on data from all five experiments further show that products that elicit a stronger emotional response are more likely to yield consistent preferences.\n\n# Team Bachelor Autumn 2021\n- Michael Amherd \n- Patrick Bargetze\n- Paco Buxtorf\n- Anja Grossrieder\n- Jana Portmann \n- Cedric Thommen \n\n[OSF](https://osf.io/82fx9/)\n[Pre-Reg (German)](https://osf.io/h2c5a)\n\n## Original work\n\nLee, L., Amir, O., & Ariely, D. (2009). In search of homo economicus: Cognitive noise and the role of emotion in preference consistency.\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/demography_011ab56529acb5ba974d2bbeb616dba2'}\n\n:::\n\n\n## Demographics\n\nWe sampled 150 participants (44% female, 1% did not specify gender), with an average age *M* = 44.4, *SD* = 11.3 years. Participants were recruited via [Amazon Mechanical Turk (AMT)](https://www.mturk.com) and paid a flat fee of USD 7.25/hour for completing the task.\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/calc_stuff_5e38d624e19a6d9232949bfaa6dca971'}\n\n:::\n\n\n## Method\n\nWe replicated Experiment 1a PICTURES VERSUS NAMES and Experiment 2 COLOR VERSUS BLACK- AND-WHITE PICTURES. Participants were randomly assigned to one of the two experiments, giving us 75 participants per experiment and \\~37 per condition.\n\nParticipants first inspected information about 10 consumer items (see example below) including the name of the product, a picture and a short description. Participants were asked to study the products as long as they wanted.\n\nOut of the 10 products we generated a list of 45 pairwise choice with all possible combinations of products, where\n\n$combinations = {P*(P-1) \\over 2}$\n\nhence, 45 combinations.\n\nEach participant then went through these 45 choices indicating her preference between the shown product. As indicated above, we replicated two experiments (1a and 2) with the following variations. In 1a the choice list consisted out of product pictures only (picture) or product names only (names); in 2 pictures were either in color (color) or black and white (b&w). Both manipulations represent different degrees of emotional and cognitive approaches to decision making.\n\n## Analysis\n\nAs the dependent measure we calculated (in)consistency in choice patterns.\n\n## Experiment 1a picture v names\n\nLee and colleagues report significant fewer transitivity violations in the picture condition (*M* = 2.7, *SD* = 4.7) than in the names condition (*M* = 4.6, *SD* = 6.3, *t*(532) = 4.08, *p* \\< .001). Using the formula for Cohen's d we want to calculate:\n\n$d = {M_{2} - M_{1} \\over SD_{pooled}}$\n\nwhere\n\n$SD_{pooled} = {\\sqrt{SD_{1}^2 + SD_{2}^2} \\over 2}$\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-2_bde8c1df275c1a7c5a5e212fdfdcc52c'}\n\n```{.r .cell-code}\nsd_pooled <- sqrt((4.7^2 + 6.3^2)/2)\nd <- (4.6 - 2.7) / sd_pooled\n```\n:::\n\n\nSo, we get a Cohen's d = 0.34, which constitutes a small effect according to Cohen, 1992. Lets see how our own replication does for Experiment 1a.\n\nOur 150 participants each made 45 choices, so we are expecting a tibble with 150\\*45 = 6750 rows. Lets see:\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/trans calculation_03e45b748f8c5d8475fe825d26f7a406'}\n\n```{.r .cell-code}\n# generate data frame for choices\nLee_Choice_Coded <- \nLee_Choice %>%\n  left_join(Lee_Items) %>%\n  mutate(combi1 = str_extract(combi1, pattern = \"(\\\\d)+\"),\n         combi2 = str_extract(combi2, pattern = \"(\\\\d)+\"),\n         combination = paste0(combi1, combi2))\n\n# subset relevant variables data frame \nLee_Choice_Select <- \n   Lee_Choice_Coded %>%\n   select(Experiment, condition, ID, combination, coded_choice)\nLee_Choice_Select\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6,750 × 5\n   Experiment condition ID       combination coded_choice\n   <chr>      <chr>     <chr>    <chr>              <int>\n 1 Lee2       pictures  8Y3uw8Wz 12                     2\n 2 Lee2       pictures  8Y3uw8Wz 13                     3\n 3 Lee2       pictures  8Y3uw8Wz 14                     4\n 4 Lee2       pictures  8Y3uw8Wz 15                     5\n 5 Lee2       pictures  8Y3uw8Wz 16                     1\n 6 Lee2       pictures  8Y3uw8Wz 17                     7\n 7 Lee2       pictures  8Y3uw8Wz 18                     8\n 8 Lee2       pictures  8Y3uw8Wz 19                     1\n 9 Lee2       pictures  8Y3uw8Wz 110                    1\n10 Lee2       pictures  8Y3uw8Wz 23                     3\n# … with 6,740 more rows\n```\n:::\n:::\n\n\nFor both experiments (1a and 2) we have for each condition (`condition`) and participant (`ID`) the relevant item comparison (`combination`) and 45 responses (`coded_choice`, a numeric value for each possible answer, as described in `Lee_Items`). Note that we updated the items to something more relevant these days. \n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/choicepropfig_1170947963293a0a2cda3d1a5ef0be5f'}\n\n:::\n\n\n![](images/choicepropfig-1.png)\n<!-- drop shadow but problem with width\n<img src=\"images/choicepropfig-1.png\" alt=\"Results\" style = 'box-shadow: 5px 2px 2px black;'>\n-->\n\n### Check for transitivity\n\nLee et al. write on p. 176 \"For simplicity in reporting the results, we focus on violations in the form of three-way preference cycles (e.g., $p_{x} ≥ p_{y}, p_{y} ≥ p_{z}$ and $p_{z} ≥ p_{x}$)\"\n\nSo, we will do the same :) - first we setup a tibble with all possible triplets and then identify (in)transitivity for choices on each product pair and then pair-triplets.\n\n[gtools](https://cran.r-project.org/web/packages/gtools/index.html) provides functions to \"Enumerate the Combinations or Permutations of the Elements of a Vector\" - cool - exactly what we need ... The function takes two arguments n = the size of the source vector, in our case 10 products, and r = size of the target vector, our triplets. This gives us a 720x3 matrix (only the first 5 rows displayed here).\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/combinations_100d90ec69e8a336dba9864a8283040f'}\n\n```{.r .cell-code}\n# generate combinations\ncomb <- permutations(n = 10, r = 3)\nhead(comb, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    1    2    4\n[3,]    1    2    5\n[4,]    1    2    6\n[5,]    1    2    7\n```\n:::\n:::\n\n\nWe transfer the matrix into a tibble and paste together all combinations of products - so there are three pairs that identify the three combinations of products. The new variable defines all transitive choices for all possible permutations of choice pairs.\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/space_e00c0c518f3d1e505fdab67067c66583'}\n\n```{.r .cell-code}\n# generate space with all possible choice combinations\nspace <- \nas_tibble(comb) %>%\n  mutate(pair1 = paste0(V1,V2),\n         pair2 = paste0(V2,V3),\n         pair3 = paste0(V1,V3),\n         transitive = paste0(V1,V2,V1)) %>%\n  select(-starts_with('V'))\nspace\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 720 × 4\n   pair1 pair2 pair3 transitive\n   <chr> <chr> <chr> <chr>     \n 1 12    23    13    121       \n 2 12    24    14    121       \n 3 12    25    15    121       \n 4 12    26    16    121       \n 5 12    27    17    121       \n 6 12    28    18    121       \n 7 12    29    19    121       \n 8 12    210   110   121       \n 9 13    32    12    131       \n10 13    34    14    131       \n# … with 710 more rows\n```\n:::\n:::\n\n\nNow for some joining. We want to join the actual choices of each participant back into the matrix we generated above, with all the permutations of my 10 items. This is a little step by step operation, cause we want to join based on three different variables (pairs 1, 2 and 3). The first join is straight forward, for every row in `pair 1` match the choice (and all other information about participants, experiment etc) from `Lee_Choice_Coded`, then rename the `coded_choice` variable and go on and match on `pair2` now - note that we add ID and condition (although ID should be enough?), rename again and then match based on `pair3`.\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-3_d7d902db5b1f8f25bc4b2217f76400d3'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 54,360 × 10\n   pair1 pair2 pair3 transitive Experiment condi…¹ ID    coded…² coded…³ coded…⁴\n   <chr> <chr> <chr> <chr>      <chr>      <chr>   <chr>   <int>   <int>   <int>\n 1 12    23    13    121        Lee2       pictur… 8Y3u…       2       3       3\n 2 12    23    13    121        Lee4       B&W     D9JS…       2       2       3\n 3 12    23    13    121        Lee4       B&W     3iTJ…       2       2       3\n 4 12    23    13    121        Lee2       pictur… 47Z1…       2       2       3\n 5 12    23    13    121        Lee3       color   KLMD…       2       3       3\n 6 12    23    13    121        L1a        names   ZVQF…       2       2       3\n 7 12    23    13    121        Lee4       B&W     u0L1…       2       2       3\n 8 12    23    13    121        Lee2       pictur… nOff…       2       2       1\n 9 12    23    13    121        Lee3       color   Hstl…       2       2       3\n10 12    23    13    121        L1a        names   zEAh…       2       3       3\n# … with 54,350 more rows, and abbreviated variable names ¹​condition,\n#   ²​coded_choice1, ³​coded_choice2, ⁴​coded_choice3\n```\n:::\n:::\n\n\nSo, that looks about right - what is left to do is to paste together the actual choices and then test these choice triples `coded_choice_triple` against the `transitive` variable we generated above - which gives us a logical vector called `test`.\n\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-4_42a9b456288a7d58e3d6e0d3f6fd3a45'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 54,360 × 6\n   transitive Experiment condition ID       choice_triple test \n   <chr>      <chr>      <chr>     <chr>    <chr>         <lgl>\n 1 121        Lee2       pictures  8Y3uw8Wz 233           FALSE\n 2 121        Lee4       B&W       D9JSme3C 223           FALSE\n 3 121        Lee4       B&W       3iTJmoTV 223           FALSE\n 4 121        Lee2       pictures  47Z1QWBC 223           FALSE\n 5 121        Lee3       color     KLMDkXi9 233           FALSE\n 6 121        L1a        names     ZVQFirwo 223           FALSE\n 7 121        Lee4       B&W       u0L1YrCo 223           FALSE\n 8 121        Lee2       pictures  nOffEONb 221           FALSE\n 9 121        Lee3       color     Hstldczk 223           FALSE\n10 121        L1a        names     zEAhW9Wh 233           FALSE\n# … with 54,350 more rows\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-5_5d95012746bc82211cdcf84988d01b89'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n# Groups:   Experiment [5]\n  Experiment condition av_intrans sd_intrans\n  <chr>      <chr>          <dbl>      <dbl>\n1 L1a        names           53.1       24.2\n2 Lee2       pictures        49.9       28.0\n3 Lee3       color           47.0       23.5\n4 Lee4       B&W             46.7       29.3\n5 <NA>       <NA>           100         NA  \n```\n:::\n:::\n\n\n## Test Experiment 1\nWe run two t-tests. For Experiment 1: names v. pictures.\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-6_2ba0ffbcb2c52f0db4417fa2df347ef9'}\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  intransitive by condition\nt = 0.52209, df = 72.026, p-value = 0.6032\nalternative hypothesis: true difference in means between group names and group pictures is not equal to 0\n95 percent confidence interval:\n -3.996787  6.833203\nsample estimates:\n   mean in group names mean in group pictures \n              23.89189               22.47368 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCohen's d\n\nd estimate: 0.1203499 (negligible)\n95 percent confidence interval:\n     lower      upper \n-0.3403704  0.5810702 \n```\n:::\n:::\n\n## Test Experiment 2\nA second one for Experiment 2: color v. B&W\n\n::: {.cell layout-align=\"center\" hash='index_cache/html/unnamed-chunk-7_2d682a9ed846d77289086ea2ec71d8f3'}\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  intransitive by condition\nt = -0.039508, df = 70.46, p-value = 0.9686\nalternative hypothesis: true difference in means between group B&W and group color is not equal to 0\n95 percent confidence interval:\n -5.601652  5.384013\nsample estimates:\n  mean in group B&W mean in group color \n           21.02632            21.13514 \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCohen's d\n\nd estimate: -0.009098058 (negligible)\n95 percent confidence interval:\n     lower      upper \n-0.4694043  0.4512082 \n```\n:::\n:::\n\n\nIn the two ways we look at the two experiments - t-test significance and Cohen's d - well, there is not a lot going on in our replication - we get non-significant results for both Tests and negligible effect sizes.\n\n# References\n\nLee, L., Amir, O., & Ariely, D. (2009). In search of homo economicus: Cognitive noise and the role of emotion in preference consistency. *Journal of consumer research, 36*(2), 173-187. [DOI](https://doi.org/10.1086/597160)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}